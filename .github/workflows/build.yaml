name: build
on:
  pull_request:
    branches:
      - main
      - dev
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'

  push:
    branches:
      - main
      - dev
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'

  workflow_dispatch:
    branches:
      - main
      - dev
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
jobs:
  get-version:
    name: Get Version
    runs-on: ubuntu-latest
    outputs: 
      version: ${{ steps.GitVersion.outputs.MajorMinorPatch }}
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.5
      with:
        versionSpec: '5.x'

    - name: GitVersion
      uses: gittools/actions/gitversion/execute@v0.9.5
      id: GitVersion

  run-ci-test:
    name: Run CI test
    runs-on: ubuntu-latest
    needs: get-version
    steps:
    - uses: actions/checkout@v2
    
    - name: Run the api
      run: docker-compose up -d

    - name: Run CI test
      run: go test ./... -v

    - name: Stop the api
      run: docker-compose down

  build-publish-api:
    name: Build And Publish API Image
    runs-on: ubuntu-latest
    needs: 
      - get-version
      - run-ci-test
    steps:
    - uses: actions/checkout@v2
    
    - name: Build the API docker image
      run: docker build . --file Dockerfile --tag eibayan/mygo:$(date +%s)

    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      if: github.ref == 'refs/heads/main'
      with:
        name: eibayan/mygo
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs:
      - get-version
      - run-ci-test
      - build-publish-api
    outputs: 
      version: ${{ needs.get-version.outputs.version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Create Release
      if: github.ref == 'refs/heads/main'
      id: create_release
      uses: actions/create-release@v1
      env: 
        GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }} 
      with:
        tag_name: ${{ needs.get-version.outputs.version }}

  trigger-dev-deploy:
    name: Trigger Dev Deployment 
    runs-on: ubuntu-18.04
    if: github.ref == 'refs/heads/main'
    needs: 
      - get-version
      - build-publish-api
      - create-release
    steps:
    - name: Deploy Dev Input
      id: DeployDevInput
      run: |
        echo ::set-output name=ref_input::'{ "ref": "${{ needs.get-version.outputs.version }}" }'
      env:
        version: ${{ needs.get-version.outputs.version }}

    - name: Deploy To Dev
      if: github.ref == 'refs/heads/main'
      id: deploy-to-dev
      uses: benc-uk/workflow-dispatch@v1
      with:
        token: ${{ secrets.CI_GITHUB_TOKEN }}
        workflow: deploy dev
        inputs: ${{ steps.DeployDevInput.outputs.ref_input }}